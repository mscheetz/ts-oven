/**
 * Copyright (c) {YEAR}
 * 
 * Logging Middleware intercepts requests and logs values
 * 
 * @summary LoggingMiddleware
 * @author {AUTHOR}
 * 
 * Created at       : {CREATED}
 * Last modified    : {MODIFIED}
 */
import { Request, Response } from 'express';{logger-impl}

export const logUrl = async(req: Request, _res: Response, next: Function) => {
    {logger}(`New request to: '${req.url}'`);
    
    next();
}

export const logType = async(req: Request, _res: Response, next: Function) => {    
    {logger}(`Request type:`, req.method);
    
    next();
}

export const logHeaders = async(req: Request, _res: Response, next: Function) => {    
    {logger}(`Request headers:`, req.headers);
    
    next();
}

export const logBody = async(req: Request, _res: Response, next: Function) => {    
    {logger}(`Request body:`, req.body);
    
    next();
}